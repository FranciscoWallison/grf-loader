name: release

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  # ───── LINT ────────────────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn --frozen-lockfile
      - run: yarn lint

  # ───── TESTES NODE ────────────────────────────────
  test-node:
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - uses: actions/download-artifact@v4   # <─ traz o dist/
        with:
          name: dist
      - run: yarn --frozen-lockfile
      - run: yarn test:node

  # ───── TESTES BROWSER ─────────────────────────────
  test-browser:
    runs-on: ubuntu-latest
    needs: test-node          # simplificado
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - uses: actions/download-artifact@v4  # garante dist/
        with:
          name: dist
      - run: yarn --frozen-lockfile
      - run: yarn test:browser


  # ───── BUILD ──────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # ───── RELEASE (bump + tag + publish) ─────────────
  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write
    steps:
      # 1. Clona com token de escrita
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      # 2. Configura identidade do bot ANTES de qualquer commit
      - name: Configure git user
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. Node + cache
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: yarn

      - run: yarn --frozen-lockfile
      - run: yarn build          # tsup -> dist/

      # 4. Corrige package.json (se necessário)
      - run: npm pkg fix

      # 5. Comita mudanças se houver
      - name: Commit artefacts
        run: |
          git add -A
          if ! git diff --cached --quiet ; then
            git commit -m "chore(build): prepare release artifacts [skip ci]"
          else
            echo "Nada para commitar"
          fi

      # 6. Bump versão + tag
      - name: Bump version & tag
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version patch -m "chore(release): %s [skip ci]"
          git push --follow-tags

      # 7. Publica no npm
      - name: Publish to npm
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
